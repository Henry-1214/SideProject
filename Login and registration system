#include<iostream>
#include<cstdlib>
#include<fstream>
#include<sstream>


using namespace std;

#define mottohayaku ios::sync_with_stdio(0),cin.tie(0),cout.tie(0)
#define endl '\n'
#define GrantAccess 0
#define WrongUsername 2
#define WrongPassword 3

ifstream in;
ofstream out;

int SignIn();
void Registration();

int main(){
    int choice;
    cout << "==(1).Login==" << endl << "==(2).Register==" << endl << "-->Choice:";cin >> choice;

    while(choice != 1 && choice != 2){
        cout << "Please enter RULED option." << endl;
        cout << "==(1).Login==" << endl << "==(2).Register==" << endl << "-->Choice:";cin >> choice;
    }
    if(choice == 1){
        SignIn();

    }
    else if(choice == 2){
        cout << "=====================" << endl << "Registration:" << endl <<"---------------------" << endl;
        Registration();
        int option;
        cout << "=====Registration Completed!!!=====" << endl << endl << "==(1).Login==" << endl << "==(2).Exit=="<<endl<<endl<< "-->Choice:";cin >> option;

        if(option == 1){
            SignIn();
        }else exit(1);

    }
}

int SignIn() {
    cout << "=====================" << endl << "Login:" << endl << "---------------------" << endl;
    
    in.open("C:\\Users\\user\\Desktop\\data.txt");
    string username, password, line;

    cout << "-->Username:"; cin >> username;
    cout << "-->Password:"; cin >> password;

    while (getline(in, line)) {
            
        stringstream ss(line);
        string un, pa;
    
        getline(ss, un, ',');
        getline(ss, pa);

        if (username == un && password == pa) {
            cout << "=====GrantAccess!!!=====" << endl;
            in.close();
            return GrantAccess;
        }
    }

    cout << "=====User does NOT exist or WrongPassword.=====" << endl << endl;
    in.close();
    return WrongUsername;
}

void Registration() {
    out.open("C:\\Users\\user\\Desktop\\data.txt", ios::app);
    string un, pa;
    cout << "-->Username:"; cin >> un;
    cout << "-->Password:"; cin >> pa;
    out << un << "," << pa << endl;
    out.close();
}
